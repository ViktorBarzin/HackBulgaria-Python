import re
import sys


# Doin' it for the Lulz
def get_first_derivative(equation, var='x'):
    return re.sub('1\*' + var, '1', (str(0)) if len([0 if var not in x else (str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * 1) + '*' + var + '^' + str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1) if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1 != 1 else str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * 1) + '*' + var) if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) > 1 else str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * 1) if '*' not in x else (str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * int(x[:x.find('*')])) + '*' + var + '^' + str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1) if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1 != 1 else str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * int(x[:x.find('*')])) + '*' + var) if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) > 1 else (str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * int(x[:x.find('*')]))) for x in re.split('- | +', equation) if x != '+' and x != '-' and not re.match('^[0-9]$', x)]) == 0 else ('+'.join([0 if var not in x else                        str(((str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1)) + '*') if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) > 2 else '') + var + ('^' + str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1)) if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1 > 1 else str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1)) + '*' + var) if '*' not in x else (str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * int(x[:x.find('*')])) + '*' + var + '^' + str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1) if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) - 1 != 1 else str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * int(x[:x.find('*')])) + '*' + var) if int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) > 1 else (str(int(str(re.findall('[' + var + ']+.[0-9]+', x)[0][2:]) if len(re.findall('[' + var + ']+.[0-9]+', x)) > 0 else 1) * int(x[:x.find('*')]))) for x in re.split('- | +', equation) if x != '+' and x != '-' and not re.match('^[0-9]$', x)])))


def main():
    get_first_derivative(sys.argv[1])

if __name__ == '__main__':
    main()
